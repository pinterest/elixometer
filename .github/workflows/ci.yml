---
name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-elixir@v1
        with:
          otp-version: 22.2
          elixir-version: '1.10'
      - name: Install dependencies
        run: mix deps.get
      - name: Check format
        run: mix format --check-formatted
  test:
    name: OTP ${{ matrix.otp }} / Elixir ${{ matrix.elixir }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        otp: [22.2]
        elixir: [1.5, 1.6, 1.7, 1.8, 1.9, '1.10']
    env:
      MIX_ENV: test
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}
      - name: Set up dependency cache
        uses: actions/cache@v1
        with:
          path: deps/
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-deps-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-deps-
      - name: Set up build cache
        uses: actions/cache@v1
        with:
          path: _build/test/
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-build-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-build-
      - name: Install dependencies
        run: |
          mix deps.get
      - name: Compile
        run: |
          mix deps.compile
          mix compile --force --warnings-as-errors
      - name: Run tests
        if: matrix.elixir != '1.10'
        run: mix test
      - name: Run tests (with coverage)
        if: matrix.elixir == '1.10'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mix coveralls.github
